<<<<<<< HEAD
select (vehicles, year == "1997")
select (vehicles, year == "1997",)
select (vehicles, year = "1997")
select (vehicles, year)
select (vehicles, year, == "1997")
select (vehicles, year, "1997")
filter (vehicles, year == "1997")
arrange (cars.1997, hwy)
mutate(cars.1997, average = mean(cty,hwy))
mutate(cars.1997, average = mean(cty + hwy))
filter (vehicles, cty > 20)
filter (vehicles, drive == "2-Wheel Drive", cty > 20)
twowheeldrive <-filter (vehicles, drive == "2-Wheel Drive", cty > 20)
filter (twowheeldrive, min(hwy))
filter (twowheeldrive, hwy)
filter (twowheeldrive, hwy == min(hwy))
BestHwyMiles <- function (year,make) {
best <- filter (vehicles, year, make, hwy == max(hwy) )
print <- best
}
BestHwyMiles(Honda, 1995)
best <- filter (vehicles, year, make, year )
best <- filter (vehicles, make, year )
best.acura <- filter (vehicles, make == Acura) %>%
filter (year == "2015") %>%
filter (hwy == max(hwy)) %>%
select ()
best.accura <- filter (vehicles, make == Accura) %>%
filter (year == "2015") %>%
filter (hwy == max(hwy)) %>%
select ()
View(vehicles)
best.acura <- filter (vehicles, make == Acura) %>%
filter (year == "2015") %>%
filter (hwy == max(hwy)) %>%
select ()
best.acura <- filter (vehicles, make == "Acura") %>%
filter (year == "2015") %>%
filter (hwy == max(hwy)) %>%
select ()
best.acura <- filter (vehicles, make == "Acura") %>%
filter (year == "2015") %>%
filter (hwy == max(hwy)) %>%
select () %>%
print ()
best.acura <- filter (vehicles, make == "Acura") %>%
filter (year == "2015") %>%
filter (hwy == max(hwy)) %>%
select () %>%
best.acura
View(best.acura)
best.acura <- filter (vehicles, make == Acura)
best.acura <- filter (vehicles, make == "Acura")
best.acura <- filter (best.acura, year == "2015")
best.acura <- filter (best.acura, hwy == max(hwy))
best.acura
View (best.acura)
install.packages("httr")
library("httr")
GET("https://ischool.uw.edu")
install.packages("jsonlite")
library("jsonlite")
library(httr)
library(jsonlite)
GET("http://www.unhcr.org/en-us/syria-emergency.html")
response <- GET("http://www.unhcr.org/en-us/syria-emergency.html")
content(response, "text")
response <- GET("http://data.unhcr.org/wiki/index.php/API_Documentation.html")
content(response, "text")
data <- content(response, "text")
fromJSON(data)
response <- GET("http://data.unhcr.org/syrianrefugees/regional.php")
data <- content(response, "text")
fromJSON(data)
library(jsonlite)
library(httr)
library(dplyr)
base.url <- http://pokeapi.co/
base.url <- "http://pokeapi.co/"
movie <- "charizard", "blastoise"
movie <-  c("charizard", "blastoise")
movie <-  "charizard"
response <- GET(pokemon.url)
pokemon.url <- "http://pokeapi.co/api/v2/pokemon/6/"
response <- GET(pokemon.url)
names (response)
select(response, status_code)
select_(response, status_code)
print (response)
body <- fromJSON(pokemon.url)
is.list (body)
poke.data <- list(bodt)
poke.data <- list(body)
names (poke.data)
poke.data <- body
is.data.frame (poke.data)
is.data.frame (moves)
is.data.frame (select (poke.data, moves)
select (poke.data, moves)
select (poke.data, moves)
body <- content(response, "text")
poke.data <- fromJSON(body)
is.data.frame (poke.data)
poke.data$moves
is.data.frame (poke.data$moves)
poke.moves <- data.frame ( head(poke.data$moves))
View(poke.moves)
poke.moves <- flatten(poke.moves)
colnames (poke.moves)
View(poke.moves)
select (poke.moves, move.name)
View(poke.moves)
View (select (poke.moves, move.name))
poke.moves <- mutate(poke.moves, type = normal, fire, electric, normal, metal, earth)
poke.moves <- mutate(poke.moves, type = "normal", "fire", "electric", "normal", "metal", "earth")
View(poke.moves)
poke.moves <- mutate(poke.moves, type = "normal" "fire" "electric" "normal" "metal" "earth")
View(poke.moves)
### Exercise 1 ###
# Load the httr and jsonlite libraries for accessing data
library(httr)
library(jsonlite)
## For these questions, look at the API documentation to identify the appropriate endpoint and information.
## Then send GET() request to fetch the data, then extract the answer to the question
response <- GET("http://data.unhcr.org/syrianrefugees/regional.php")
data <- content(response, "text")
fromJSON(data)
# For what years does the API have statistical data?
# What is the "country code" for the "Syrian Arab Republic"?
# How many persons of concern from Syria applied for residence in the USA in 2013?
# Hint: you'll need to use a query parameter
# Use the `str()` function to print the data of interest
# See http://www.unhcr.org/en-us/who-we-help.html for details on these terms
## And this was only 2013...
# How many *refugees* from Syria settled the USA in all years in the data set (2000 through 2013)?
# Hint: check out the "time series" end points
# Use the `plot()` function to plot the year vs. the value.
# Add `type="o"` as a parameter to draw a line
# Pick one other country in the world (e.g., Turkey).
# How many *refugees* from Syria settled in that country in all years in the data set (2000 through 2013)?
# Is it more or less than the USA? (Hint: join the tables and add a new column!)
# Hint: To compare the values, you'll need to convert the data (which is a string) to a number; try using `as.numeric()`
## Bonus (not in solution):
# How many of the refugees in 2013 were children (between 0 and 4 years old)?
## Extra practice (but less interesting results)
# How many total people applied for asylum in the USA in 2013?
# - You'll need to filter out NA values; try using `is.na()`
# - To calculate a sum, you'll need to convert the data (which is a string) to a number; try using `as.numeric()`
## Also note that asylum seekers are not refugees
library(httr)
library(jsonlite)
GET("http://data.unhcr.org/api/countries/list.json")
response <- GET("http://data.unhcr.org/api/countries/list.json")
body <- fromJSON (content(response, "text"))
body
View(body)
library(dplyr)
body %>%  filter (name_en == "Syrian Arab Republic")
body %>%  filter (name_en == "Syrian Arab Republic") %>%
select (country_code)
GET ("http://unhcr.org/api/stats/persons_of_concern.json")
body <- GET ("http://unhcr.org/api/stats/persons_of_concern.json")
response<- GET ("http://unhcr.org/api/stats/persons_of_concern.json")
body <- fromJSON(content(response, "text"))
library (dplyr)
library (jsonlite)
library (httr)
my.apikey <- "f745e2dceb1746018bc11b9cf2106f3e"
source ("apikey.R")
nyt.apikey <- f745e2dceb1746018bc11b9cf2106f3e
nyt.apikey <- "f745e2dceb1746018bc11b9cf2106f3e
nyt.apikey <- "f745e2dceb1746018bc11b9cf2106f3e"
nyt.apikey <- "f745e2dceb1746018bc11b9cf2106f3e"
source (apikey.R)
source ("apikey.R")
setwd("~/")
setwd("~/Desktop/INFO 201/classwork/module11-apis")
setwd("~/Desktop/RStudio.app")
source ("apikey.R")
setwd("~/")
source ("apikey.R")
GET("https://api.nytimes.com/svc/movies/v2/f745e2dceb1746018bc11b9cf2106f3e")
response <- GET("https://api.nytimes.com/svc/movies/v2/f745e2dceb1746018bc11b9cf2106f3e")
response <- GET("https://api.nytimes.com/svc/movies/v2/user&access_token=f745e2dceb1746018bc11b9cf2106f3e")
response
response <- GET("https://api.nytimes.com/svc/movies/v2/"
response
response <- GET("https://api.nytimes.com/svc/movies/v2/")
response
response <- GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json/user&access_token=f745e2dceb1746018bc11b9cf2106f3e")
response
response <- GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.")
GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.")
GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.", query = nyt.apikey)
source("apikey.R")
GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.")
GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.?api_key=f745e2dceb1746018bc11b9cf2106f3e")
respone <- GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.?api_key=f745e2dceb1746018bc11b9cf2106f3e")
response <- GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.?api_key=f745e2dceb1746018bc11b9cf2106f3e")
fromJSON <- (content(response, "text"))
body <- fromJSON <- (content(response, "text"))
body
View (body)
movies <- "Pulp Fiction"
movie <- "Pulp Fiction"
data <- data_frame(body)
View(data)
body <- (response, "text")
body <- content(response, "text")
data <- fromJSON (body)
View (body)
View (body)
query.params <- list (type = "review")
response <- GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.?api_key=f745e2dceb1746018bc11b9cf2106f3e", query = query.params)
body <- content(response, "text")
data <- fromJSON (body)
View (body)
query.params <- list (type = "Pulp Fiction")
response <- GET("https://api.nytimes.com/svc/movies/v2/reviews/search.json.?api_key=f745e2dceb1746018bc11b9cf2106f3e", query = query.params)
body <- content(response, "text")
View (body)
data <- fromJSON (body)
View (data)
GET(https://congress.api.sunlightfoundation.com/)
GET("https://congress.api.sunlightfoundation.com/")
response <- GET("https://congress.api.sunlightfoundation.com/")
response <- GET("https://congress.api.sunlightfoundation.com/")
data <- content (response, "text")
body <- content (response, "text")
data <- fromJSON (body)
data
view (data)
View (data)
install.packages("shiny")
library("shiny")
my.ui <- fluidPage(
h1("Hello Shiny"),
textInput ('user.name', label = 'What is your name?')
)
shinyApp(ui = my.ui, server = my.server)
my.server <- function (input, output) {
}
shinyApp(ui = my.ui, server = my.server)
runApp()
runApp('Desktop/INFO 201/classwork/module15-shiny/exercise-1')
runApp('Desktop/INFO 201/classwork/module15-shiny/exercise-1')
runApp('Desktop/INFO 201/classwork/module15-shiny/exercise-1')
runApp('Desktop/INFO 201/classwork/module15-shiny/exercise-1')
runApp('Desktop/INFO 201/classwork/module15-shiny/exercise-1')
runApp('Desktop/INFO 201/classwork/module15-shiny/exercise-1')
diamonds <- data("diamonds")
diamonds <- data(diamonds)
library(ggplot2)
library(dplyr)
library(shiny)
diamonds <- data(diamonds)
data(diamonds)
diamonds <- data(diamonds)
diamonds.sample <- sample_3000(diamonds)
diamonds <- data("diamonds")
diamonds <- data(diamonds)
data(diamonds)
library(ggplot2)
data(diamonds)
diamonds.sample <- sample_3000(diamonds)
data(diamonds)
library(ggplot2)
data(diamonds)
data("diamonds")
data <- data("diamonds")
data <- data(diamonds)
data(diamonds)
dining.fee <- read.csv("Sheet1-Table 1.csv")
setwd("~/Desktop/INFO 201/homework/finalprojectinfo201")
read.csv("infantmortality.csv")
setwd("~/Desktop/INFO 201/homework/finalprojectinfo201/SexSpecificU5MRandIMR ")
read.csv("infantmortality.csv")
infant.mortality <- read.csv("infantmortality.csv")
View(infant.mortality)
under.five.mortality <- read.csv("under5mortality.csv")
View(under.five.mortality)
infant.mortality <- read.csv("infantmortality.csv")
setwd("~/Desktop/INFO 201/homework/finalprojectinfo201/SexSpecificU5MRandIMR ")
infant.mortality <- read.csv("infantmortality.csv")
under.five.mortality <- read.csv("infantmortality.csv")
View (infant.mortality[6:595, ])
infant.mortality <- infant.mortality[6:595, ]
data <- read.csv("data/Sex-specific U5MR estimates-Table 1.csv")
setwd("~/Desktop/INFO 201/homework/finalprojectinfo201")
data <- read.csv("data/Sex-specific U5MR estimates-Table 1.csv")
View(data)
countries.male <- list("1990"=data$X.2[8:592],"2000"=data$X.3[8:592],"2010"=data$X.3[8:592],"2015"=data$X.3[8:592])
countries.femmale<- list("1990"=data$X.6[8:592],"2000"=data$X.7[8:592],"2010"=data$X.8[8:592],"2015"=data$X.9[8:592])
View (countries.male)
View (countries.female)
View (countries.femmale)
countries
countries <- unique(data$X[8:592])
View (countries)
countries <- (data$X[8:592])
countries <- unique(data$X[8:592])
View(cleaned.data$male1990+cleaned.data$female1990)
data <- read.csv("data/Sex-specific U5MR estimates-Table 1.csv",stringsAsFactors = FALSE)
countries <- unique(data$X[8:592])
countries.male <- list("male1990"=data$X.2[8:592][seq(2,584,3)],"male2000"=data$X.3[8:592][seq(2,584,3)],"male2010"=data$X.3[8:592][seq(2,584,3)],"male2015"=data$X.3[8:592][seq(2,584,3)])
countries.female<- list("female1990"=data$X.6[8:592][seq(2,584,3)],"female2000"=data$X.7[8:592][seq(2,584,3)],"female2010"=data$X.8[8:592][seq(2,584,3)],"female2015"=data$X.9[8:592][seq(2,584,3)])
countries.sexratio <- list("sexratio1990"=data$X.10[8:592][seq(2,584,3)],"sexratio2000"=data$X.11[8:592][seq(2,584,3)],"sexratio2010"=data$X.12[8:592][seq(2,584,3)],"sexratio2015"=data$X.13[8:592][seq(2,584,3)])
countries.iso <- data$Child.Mortality.Estimates[8:592][seq(2,584,3)]
cleaned.data <- data.frame(countries.iso,countries,countries.male,countries.female,countries.sexratio)
cleaned.data1 <- mutate(cleaned.data,avg.1990=(female1990),avg.2000=((male2000+female2000)/2),avg.2010=((male2010+female2010)/2),avg.2015=((male2015+female2015)/2))
library(dplyr)
cleaned.data1 <- mutate(cleaned.data,avg.1990=(female1990),avg.2000=((male2000+female2000)/2),avg.2010=((male2010+female2010)/2),avg.2015=((male2015+female2015)/2))
View(cleaned.data1)
cleaned.data1 <- mutate(cleaned.data,avg.1990=((male1990+female1990)/2),avg.2000=((male2000+female2000)/2),avg.2010=((male2010+female2010)/2),avg.2015=((male2015+female2015)/2))
View(cleaned.data1)
cleaned.data$males1990 + cleaned.data$females1990
c(cleaned.data$males1990 + cleaned.data$females1990)
View(cleaned.data)
data <- read.csv("data/Sex-specific U5MR estimates-Table 1.csv",stringsAsFactors = FALSE)
countries <- unique(data$X[8:592])
countries.male <- list("male1990"=as.numeric(data$X.2[8:592][seq(2,584,3)]),"male2000"=data$X.3[8:592][seq(2,584,3)],"male2010"=data$X.3[8:592][seq(2,584,3)],"male2015"=data$X.3[8:592][seq(2,584,3)])
countries.female<- list("female1990"=as.numeric(data$X.6[8:592][seq(2,584,3)]),"female2000"=data$X.7[8:592][seq(2,584,3)],"female2010"=data$X.8[8:592][seq(2,584,3)],"female2015"=data$X.9[8:592][seq(2,584,3)])
countries.sexratio <- list("sexratio1990"=data$X.10[8:592][seq(2,584,3)],"sexratio2000"=data$X.11[8:592][seq(2,584,3)],"sexratio2010"=data$X.12[8:592][seq(2,584,3)],"sexratio2015"=data$X.13[8:592][seq(2,584,3)])
countries.iso <- data$Child.Mortality.Estimates[8:592][seq(2,584,3)]
cleaned.data <- data.frame(countries.iso,countries,countries.male,countries.female,countries.sexratio)
cleaned.data <- mutate(cleaned.data,avg.1990=((male1990+female1990)/2),avg.2000=((male2000+female2000)/2),avg.2010=((male2010+female2010)/2),avg.2015=((male2015+female2015)/2))
library(ggplot2)
library(dplyr)
world <- map_data("world")
ggplot(data= world)
ggplot() +
geom_bar(data = world, map = world)
ggplot() +
geom_bar(data = world, map = world, aes(x = long, y = lat, map_id = region))
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region))
world <- world[world$region != "Antarctica",]
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region))
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region))
left_join(world, cleaned.data)
View(world)
world$country <- cleaned.data$countries
left_join (world, cleaned.data, by = region)
left_join (world, cleaned.data, by = "region")
left_join (world, cleaned.data, by = c("region" = "countries"))
View (left_join (world, cleaned.data, by = c("region" = "countries")))
View(world)
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
View(world)
world <- world[world$region != "Antarctica",]
cleaned.data <- cleaned.data
View(cleaned.data)
View(world)
View (left_join (world, cleaned.data, by = c("IS03" = "countries.iso")))
View (left_join (world, cleaned.data, by = c("ISO3" = "countries.iso")))
=======
<
world <- map_data("world")
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
world <- world[world$region != "Antarctica",]
cleaned.data <- cleaned.data[ ,c("countries.iso", "countries", input$year)]
world <- left_join (world, cleaned.data, by = c("ISO3" = "countries.iso"))
runApp()
runApp()
runApp()
substr(1,1,"hi")
?substr
substr("hi", 1, 1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
world <- map_data("world")
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
world <- world[world$region != "Antarctica",]
cleaned.data <- cleaned.data[ ,c("countries.iso", "countries", input$year)]
world <- left_join (world, cleaned.data, by = c("ISO3" = "countries.iso"))
runApp()
world <- map_data("world")
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
world <- world[world$region != "Antarctica",]
runApp()
runApp()
world <- map_data("world")
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
world <- world[world$region != "Antarctica",]
cleaned.data <- cleaned.data[ ,c("countries.iso", "countries", input$year)]
world <- map_data("world")
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
world <- world[world$region != "Antarctica",]
runApp()
runApp()
runApp()
runApp()
world <- map_data("world")
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
world <- world[world$region != "Antarctica",]
world <- left_join (world, cleaned.data, by = c("ISO3" = "countries.iso"))
View(world)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
year <- c("1990","2000","2010","2015")
country.specific<-filter(cleaned.data,countries==input$country)
m.data <- c(country.specific$"m1990",country.specific$"m2000",country.specific$"m2010",country.specific$"m2015")
f.data <- c(country.specific$"f1990",country.specific$"f2000",country.specific$'f2010',country.specific$"f2015")
country.specific<-filter(cleaned.data,countries=="Cuba")
m.data <- c(country.specific$"m1990",country.specific$"m2000",country.specific$"m2010",country.specific$"m2015")
f.data <- c(country.specific$"f1990",country.specific$"f2000",country.specific$'f2010',country.specific$"f2015")
View(data.frame(year,m.data,f.data))
runApp()
runApp()
runApp()
library(dplyr)
data <- read.csv("data/Sex-specific U5MR estimates-Table 1.csv",stringsAsFactors = FALSE)
countries <- unique(data$X[8:592])
countries.f<- list("f1990"=as.numeric(data$X.6[8:592][seq(2,584,3)]),"f2000"=data$X.7[8:592][seq(2,584,3)],"f2010"=data$X.8[8:592][seq(2,584,3)],"f2015"=data$X.9[8:592][seq(2,584,3)])
countries.m <- list("m1990"=as.numeric(data$X.2[8:592][seq(2,584,3)]),"m2000"=data$X.3[8:592][seq(2,584,3)],"m2010"=data$X.3[8:592][seq(2,584,3)],"m2015"=data$X.3[8:592][seq(2,584,3)])
countries.sexratio <- list("sexratio1990"=data$X.10[8:592][seq(2,584,3)],"sexratio2000"=data$X.11[8:592][seq(2,584,3)],"sexratio2010"=data$X.12[8:592][seq(2,584,3)],"sexratio2015"=data$X.13[8:592][seq(2,584,3)])
countries.iso <- data$Child.Mortality.Estimates[8:592][seq(2,584,3)]
cleaned.data <- data.frame(countries.iso,countries,countries.m,countries.f,countries.sexratio)
cleaned.data <- mutate(cleaned.data,avg.1990=((m1990+f1990)/2),avg.2000=((m2000+f2000)/2),avg.2010=((m2010+f2010)/2),avg.2015=((m2015+f2015)/2))
world
View(cleaned.data)
year <- c("1990","2000","2010","2015")
country.specific<-filter(cleaned.data,countries=="Cuba")
m.data <- c(country.specific$"m1990",country.specific$"m2000",country.specific$"m2010",country.specific$"m2015")
f.data <- c(country.specific$"f1990",country.specific$"f2000",country.specific$'f2010',country.specific$"f2015")
View(data.frame(year,m.data,f.data))
runApp()
runApp()
runApp()
library(dplyr)
data <- read.csv("data/Sex-specific U5MR estimates-Table 1.csv",stringsAsFactors = FALSE)
countries <- unique(data$X[8:592])
countries.m <- list("m1990"=as.numeric(data$X.2[8:592][seq(2,584,3)]),"m2000"=data$X.3[8:592][seq(2,584,3)],"m2010"=data$X.3[8:592][seq(2,584,3)],"m2015"=data$X.3[8:592][seq(2,584,3)])
countries.f<- list("f1990"=as.numeric(data$X.6[8:592][seq(2,584,3)]),"f2000"=data$X.7[8:592][seq(2,584,3)],"f2010"=data$X.8[8:592][seq(2,584,3)],"f2015"=data$X.9[8:592][seq(2,584,3)])
countries.sexratio <- list("sexratio1990"=data$X.10[8:592][seq(2,584,3)],"sexratio2000"=data$X.11[8:592][seq(2,584,3)],"sexratio2010"=data$X.12[8:592][seq(2,584,3)],"sexratio2015"=data$X.13[8:592][seq(2,584,3)])
countries.iso <- data$Child.Mortality.Estimates[8:592][seq(2,584,3)]
cleaned.data <- data.frame(countries.iso,countries,countries.m,countries.f,countries.sexratio)
cleaned.data <- mutate(cleaned.data,avg.1990=((m1990+f1990)/2),avg.2000=((m2000+f2000)/2),avg.2010=((m2010+f2010)/2),avg.2015=((m2015+f2015)/2))
View(cleaned.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
>>>>>>> 66b62725a165b712545f4f579f1c2d18e4fbc068
world <- map_data("world")
world <- mutate (world, ISO3 = iso.alpha(region, n = 3))
world <- world[world$region != "Antarctica",]
world <- left_join (world, cleaned.data, by = c("ISO3" = "countries.iso"))
<<<<<<< HEAD
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region))
View(world)
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990 ))
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region), fill = avg.1990)
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region), fill = "avg.1990")
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, color = avg.1990))
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990))
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990))
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990))
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990))
map <- ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = input$year)) +
scale_color_brewer(palette = "Set3")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = input$year)) +
scale_color_brewer(palette = "Set3")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_color_brewer(palette = "Set3")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, color = avg.1990)) +
scale_color_brewer(palette = "Set3")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_color_brewer(palette = "Set3")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_brewer(palette = "Set3")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(palette = "Set3")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "dark green")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "dark green", high = "red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "light greem", high = "red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "light green", high = "red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "blue")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "dark green", high = "red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "dark red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")+
theme(panel.background = "white")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")+
theme(panel.background = element_rect("white"))
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")+
theme(panel.background = element_rect(color = "black", fill = "white"))
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")+
theme(panel.background = element_rect(color = "black", fill = "white"))+
labs (x = "", y = "")
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")+
theme(panel.background = element_rect(color = "black", fill = "white"))+
labs (x = "", y = "") +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot() +
geom_map(data = world, map = world, aes(x = long, y = lat, map_id = region, fill = avg.1990)) +
scale_fill_gradient(low = "green", high = "red")+
theme(panel.background = element_rect(color = "black", fill = "white"))+
labs (x = "", y = "") +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("readr")
library(readr)
library(readr)
Metadata_Indicator_API_SH_IMM_MEAS_DS2_en_csv_v2 <- read_csv("~/Desktop/INFO 201/homework/finalprojectinfo201/measles/Metadata_Indicator_API_SH.IMM.MEAS_DS2_en_csv_v2.csv")
View(Metadata_Indicator_API_SH_IMM_MEAS_DS2_en_csv_v2)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
View(Metadata_Indicator_API_SH_IMM_MEAS_DS2_en_csv_v2)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
API_SH_IMM_MEAS_DS2_en_csv_v2 <- read_csv("~/Desktop/INFO 201/homework/finalprojectinfo201/measles/API_SH.IMM.MEAS_DS2_en_csv_v2.csv")
setwd("~/Desktop/INFO 201/homework/finalprojectinfo201")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
read.csv("WHS8_110.csv")
View (read.csv("WHS8_110.csv"))
=======
View(world)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
measles.data <- read.csv("measles/WHS8_110.csv")
cols <- colnames(measles.data)
measles.data <- measles.data[,cols[c(1,2,7,17,27)]]
colnames(measles.data)<- c("Country","2015","2010","2000","1990")
measles.data <- measles.data[2:195,]
View(measles.data)
cleaned.data
View(cleaned.data)
.
dpt.data <- read.csv("dpt/WHS4_100.csv")
cols <- colnames(dpt.data)
dpt.data <- dpt.data[,cols[c(1,2,7,17,27)]]
colnames(dpt.data) <- c("Country","2015","2010","2000","1990")
dpt.data <- dpt.data[2:195,]
View(dpt.data)
measles2 <- left_join(meadles.data, cleaned.data, by=("Country"=="countries"))
measles2 <- left_join(measles.data, cleaned.data, by=("Country"=="countries"))
measles2 <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles2 <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
View(measles2)
measles2 <- measles2 %>% filter(!is.na(countries.iso))
View(measles2)
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles2 %>% filter(!is.na(countries.iso))
dpt.mort <- left_join(dpt.data, cleaned.data, by=c("Country"="countries"))
dpt.mort <- measles2 %>% filter(!is.na(countries.iso))
dpt.mort <- left_join(dpt.data, cleaned.data, by=c("Country"="countries"))
View(dpt.mort)
dpt.mort <- measles2 %>% filter(!is.na(countries.iso))
View(dpt.mort)
measles.mort <- select(1990, 2000, 2010)
measles.mort <- select("1990", "2000", "2010")
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mortselect("1990", "2000", "2010")
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select("1990", "2000", "2010")
measles.mort <- measles.mort %>% select(1990, 2000, 2010)
measles.mort <- measles.mort %>% select_(1990, 2000, 2010)
measles.data <- read.csv("measles/WHS8_110.csv")
cols <- colnames(measles.data)
measles.data <- measles.data[,cols[c(1,2,7,17,27)]]
colnames(measles.data)<- c("Country","m.2015","m.2010","m.2000","m.1990")
measles.data <- measles.data[2:195,]
dpt.data <- read.csv("dpt/WHS4_100.csv")
cols <- colnames(dpt.data)
dpt.data <- dpt.data[,cols[c(1,2,7,17,27)]]
colnames(dpt.data) <- c("Country","d.2015","d.2010","d.2000","d.1990")
dpt.data <- dpt.data[2:195,]
measles.mort <- measles.mort %>% select(m.1990, m.2000, m.2010)
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(m.1990, m.2000, m.2010)
View(measles.mort)
measles.mort <- measles.mort %>% select(m.1990, m.2000, m.2010,m.2015,avg.1990,avg.2000,avg.2010,avg.2015)
runApp()
output$measles <- renderPlot(
measles <- ggplot(data=measles.mort, mapping=aes(x=m.1990, y=avg.1990))
+ geom_point()
)
output$measles <- renderPlot(
measles <- ggplot(data=measles.mort, mapping=aes(x=m.1990, y=avg.1990))
+ geom_point()
)
measles <- ggplot(data=measles.mort, mapping=aes(x=m.1990, y=avg.1990))
measles
measles <- ggplot(data=measles.mort, mapping=aes(x=measles.mort$m.1990, y=measles.mort$avg.1990))
measles
mplot <- ggplot(data=measles.mort, mapping=aes(x=measles.mort$m.1990, y=measles.mort$avg.1990))
+ geom_point()
mplot <- ggplot(data=measles.mort, mapping=aes(x=measles.mort$m.1990, y=measles.mort$avg.1990)) + geom_point()
mplot
runApp()
runApp()
runApp()
output$measles <- renderPlot(
measles <- ggplot(data=measles.mort, mapping=aes(x=m1990, y=avg.1990)) + geom_point()
)
measles <- ggplot(data=measles.mort, mapping=aes(x=m1990, y=avg.1990)) + geom_point()
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
dpt.mort <- left_join(dpt.data, cleaned.data, by=c("Country"="countries"))
dpt.mort <- dpt.mort %>% filter(!is.na(countries.iso))
dpt.mort <- dpt.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
library(dplyr)
data <- read.csv("data/Sex-specific U5MR estimates-Table 1.csv",stringsAsFactors = FALSE)
countries <- unique(data$X[8:592])
countries.m <- list("m1990"=as.numeric(data$X.2[8:592][seq(2,584,3)]),"m2000"=data$X.3[8:592][seq(2,584,3)],"m2010"=data$X.4[8:592][seq(2,584,3)],"m2015"=data$X.5[8:592][seq(2,584,3)])
countries.f<- list("f1990"=as.numeric(data$X.6[8:592][seq(2,584,3)]),"f2000"=data$X.7[8:592][seq(2,584,3)],"f2010"=data$X.8[8:592][seq(2,584,3)],"f2015"=data$X.9[8:592][seq(2,584,3)])
countries.sexratio <- list("sexratio1990"=data$X.10[8:592][seq(2,584,3)],"sexratio2000"=data$X.11[8:592][seq(2,584,3)],"sexratio2010"=data$X.12[8:592][seq(2,584,3)],"sexratio2015"=data$X.13[8:592][seq(2,584,3)])
countries.iso <- data$Child.Mortality.Estimates[8:592][seq(2,584,3)]
cleaned.data <- data.frame(countries.iso,countries,countries.m,countries.f,countries.sexratio)
cleaned.data <- mutate(cleaned.data,avg.1990=((m1990+f1990)/2),avg.2000=((m2000+f2000)/2),avg.2010=((m2010+f2010)/2),avg.2015=((m2015+f2015)/2))
measles.data <- read.csv("measles/WHS8_110.csv")
cols <- colnames(measles.data)
measles.data <- measles.data[,cols[c(1,2,7,17,27)]]
colnames(measles.data)<- c("Country","x2015","x2010","x2000","x1990")
measles.data <- measles.data[2:195,]
dpt.data <- read.csv("dpt/WHS4_100.csv")
cols <- colnames(dpt.data)
dpt.data <- dpt.data[,cols[c(1,2,7,17,27)]]
colnames(dpt.data) <- c("Country","x2015","x2010","x2000","x1990")
dpt.data <- dpt.data[2:195,]
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
dpt.mort <- left_join(dpt.data, cleaned.data, by=c("Country"="countries"))
dpt.mort <- dpt.mort %>% filter(!is.na(countries.iso))
dpt.mort <- dpt.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles <- ggplot(data=measles.mort, mapping=aes(x=m1990, y=avg.1990)) + geom_point()
measles
measles <- ggplot(data=measles.mort, mapping=aes(x=x1990, y=avg.1990)) + geom_point()
measles
output$measles <- renderPlot(
measles <- ggplot(data=measles.mort, mapping=aes(x=x2000, y=avg.2000)) + geom_point()
)
runApp()
runApp()
runApp()
runApp()
runApp()
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measels.mort %>% gather(key=xyear, value=wha, x1990, x2000, x2010)
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measles.mort %>% gather(key=xyear, value=wha, x1990, x2000, x2010)
library(tidyr)
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measles.mort %>% gather(key=xyear, value=wha, x1990, x2000, x2010)
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measles.mort %>% gather(key=xyear, value=wha, x1990, x2000, x2010)
View(measles.mort)
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% filter(!is.na(countries.iso))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measles.mort %>% gather(key=year, value=measles, x1990, x2000, x2010)
measles.mort <- measles.mort %>% gather(key=year2, value=mort, avg.1990, avg.2000, avg.2010)
runApp()
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measles.mort %>% gather(key=year, value=measles, x1990, x2000, x2010)
measles.mort <- measles.mort %>% gather(key=year2, value=mort, avg.1990, avg.2000, avg.2010)
measles.mort <- measles.mort %>% filter(!is.na(measles))
View(measles.mort)
measles.mort <- measles.mort %>% filter(!is.na(measles)&!is.na(mort))
runApp()
runApp()
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measles.mort %>% gather(key=year, value=measles, x1990, x2000, x2010)
measles.mort <- measles.mort %>% gather(key=year2, value=mort, avg.1990, avg.2000, avg.2010)
measles.mort <- measles.mort %>% filter(!is.na(measles)&&(!is.na(mort)))
measles.mort <- left_join(measles.data, cleaned.data, by=c("Country"="countries"))
measles.mort <- measles.mort %>% select(x1990, x2000, x2010,avg.1990,avg.2000,avg.2010)
measles.mort <- measles.mort %>% gather(key=year, value=measles, x1990, x2000, x2010)
measles.mort <- measles.mort %>% gather(key=year2, value=mort, avg.1990, avg.2000, avg.2010)
measles.mort <- measles.mort %>% filter((!is.na(measles))&&(!is.na(mort)))
measles.mort <- measles.mort %>% filter((!is.na(measles))&&(!is.na(mort)))
measles.mort <- measles.mort %>% filter(!is.na(measles)&&!is.na(mort))
View(measles.mort)
measles.mort <- measles.mort %>% filter(!is.na(measles)&!is.na(mort))
>>>>>>> 66b62725a165b712545f4f579f1c2d18e4fbc068
runApp()
runApp()
runApp()
runApp()
